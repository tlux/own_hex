name: Run Tests

# Define workflow that runs when changes are pushed to the
# `main` branch or pushed to a PR branch that targets the `main`
# branch. Change the branch name if your project uses a
# different name for the main branch like "master" or "production".
on:
  push:
    branches: ["main"] # adapt branch for project
  pull_request:
    branches: ["main"] # adapt branch for project

# Sets the ENV `MIX_ENV` to `test` for running tests
env:
  MIX_ENV: test

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test on OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    strategy:
      fail-fast: false
      # Specify the OTP and Elixir versions to use when building
      # and running the workflow steps.
      matrix:
        include:
          - otp: "27.x"
            elixir: "1.17.x"

    steps:
      # Step: Setup Elixir + Erlang image as the base.
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}

      # Step: Check out the code.
      - name: Checkout code
        uses: actions/checkout@v3

      # Step: Define how to cache deps. Restores existing cache if present.
      - name: Cache deps
        id: cache-deps
        uses: actions/cache@v3
        env:
          cache-name: cache-elixir-deps
        with:
          path: deps
          key: ${{runner.os}}-elixir-${{matrix.elixir}}-otp-${{matrix.otp}}-mix-${{env.cache-name}}-${{hashFiles('**/mix.lock')}}
          restore-keys: |
            ${{runner.os}}-elixir-${{matrix.elixir}}-otp-${{matrix.otp}}-mix-${{env.cache-name}}-

      # Step: Define how to cache the `_build` directory. After the first run,
      # this speeds up tests runs a lot. This includes not re-compiling our
      # project's downloaded deps every run.
      - name: Cache compiled build
        id: cache-build
        uses: actions/cache@v3
        env:
          cache-name: cache-compiled-build
        with:
          path: _build
          key: ${{runner.os}}-elixir-${{matrix.elixir}}-otp-${{matrix.otp}}-mix-${{env.cache-name}}-${{hashFiles('**/mix.lock')}}
          restore-keys: |
            ${{runner.os}}-elixir-${{matrix.elixir}}-otp-${{matrix.otp}}-mix-${{env.cache-name}}-

      # Step: Cache Dialyzer PLTs.
      - name: Cache Dialyzer PLTs
        id: cache-plts
        uses: actions/cache@v3
        env:
          cache-name: cache-plts
        with:
          path: priv/plts
          key: ${{runner.os}}-elixir-${{matrix.elixir}}-otp-${{matrix.otp}}-mix-${{env.cache-name}}

      # Step: Download project dependencies. If unchanged, uses
      # the cached version.
      - name: Install dependencies
        run: mix deps.get

      - name: Check unused dependencies
        run: mix deps.unlock --check-unused

      - name: Audit dependencies
        run: mix deps.audit

      - name: Audit Hex packages
        run: mix hex.audit

      - name: Compiles without warnings
        run: mix compile --warnings-as-errors

      - name: Check Formatting
        run: mix format --check-formatted

      - name: Static Code Analysis with Credo
        run: mix credo

      - name: Check typespecs with Dialyzer
        run: mix dialyzer --format github

      - name: Run tests
        run: mix coveralls.github
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: |
            ghcr.io/${{ github.repository_owner }}/own_hex:latest
            ghcr.io/${{ github.repository_owner }}/own_hex:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

      - name: Post build clean up
        run: |
          docker builder prune --all --force
